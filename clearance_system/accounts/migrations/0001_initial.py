# Generated by Django 4.0.4 on 2022-05-20 07:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=20, verbose_name='Last Name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Registrar',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('stf_number', models.CharField(max_length=50, unique=True, verbose_name='Staff Number')),
                ('is_registrar', models.BooleanField(default=True, verbose_name='Is Registrar')),
            ],
            options={
                'verbose_name': 'Registrar',
                'verbose_name_plural': 'Registrars',
                'db_table': 'registrar',
            },
            bases=('accounts.customuser',),
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('stf_number', models.CharField(max_length=50, unique=True, verbose_name='Staff Number')),
                ('is_supervisor', models.BooleanField(default=True, verbose_name='Is Supervisor')),
            ],
            options={
                'verbose_name': 'Supervisor',
                'verbose_name_plural': 'Supervisors',
                'db_table': 'supervisors',
            },
            bases=('accounts.customuser',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('std_number', models.CharField(max_length=50, unique=True, verbose_name='Student Number')),
                ('course', models.CharField(max_length=50, verbose_name='Course')),
                ('is_validated', models.BooleanField(verbose_name='Validation Status')),
                ('student_status', models.BooleanField(default=False, verbose_name='Cleared')),
                ('registrar_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.registrar')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'db_table': 'students',
            },
            bases=('accounts.customuser',),
        ),
    ]
